#!/usr/bin/env bash
pipeline {
  agent {
    label "<dir>-internal1"
  }
  stages {
    stage('Tests') {
      parallel {
        stage('Test <dir> backend') {
          environment {
            ADMIN_TOKEN = '!!!PLACE YOUR TOKEN HERE!!!'
          }
          steps {
            dir ('<dir>-server') {
              sh 'git submodule update -f --init --recursive --remote'
              sh 'rm -rf node_modules config.yaml package.lock'
              sh 'yarn install'
              sh 'yarn build'
              writeFile file: ".env", text: """
                ADMIN_TOKEN=${env.ADMIN_TOKEN}
              """
              sh 'SERVER=localhost yarn deploy'
              sh 'SERVER=localhost yarn test'
            }
          }
        }
        stage('Test <dir> UI') {
          steps {
            dir ('<dir>-ui') {
              sh 'rm -rf node_modules package.lock'
              sh 'yarn install'
              sh 'yarn test:ci'
            }
          }
        }
      }
    }
  }
  post {
    /* TODO: enable after the logging is enabled
    always {
      sh '''tar -czvf log.tar.gz log'''
      archiveArtifacts artifacts: "log.tar.gz"
    }*/

    /*
    success {
      slackSend(
          color: 'good',
          message: "Build Successful: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})"
      )
      slackSend(
          channel: '#dev-<dir>-ci',
          color: 'good',
          message: "Build Successful: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})"
      )
    }

    unstable {
      slackSend(
          color: 'good',
          message: "Build Unstable: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})"
      )
      slackSend(
          channel: '#dev-<dir>-ci',
          color: 'warning',
          message: "Build Unstable: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})"
      )
    }
    
    failure {
      slackSend(
          color: 'danger',
          message: "Build failed: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})"
      )
      slackSend(
          channel: '#dev-<dir>-ci',
          color: 'danger',
          message: "Build failed: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})"
      )
      script {
        if (env.BRANCH_NAME == 'develop') {
          slackSend(
              channel: '#dev-<dir>',
              color: 'danger',
              message: "Develop branch build failed: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})"
          )
        }
      }
    }
    */
  }
}
